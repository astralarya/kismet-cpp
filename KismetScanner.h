// Generated by Flexc++ V0.98.00 on Mon, 08 Jul 2013 14:17:13 -0500

#ifndef KismetScanner_H_INCLUDED_
#define KismetScanner_H_INCLUDED_

// $insert baseclass_h
#include "KismetScannerbase.h"
#include "KismetParserbase.h"
#include "Options.h"

// $insert namespace-open
namespace KISMET
{

// $insert classHead
class KismetScanner: public KismetScannerBase
{
    public:
        explicit KismetScanner(std::istream &in = std::cin,
                                std::ostream &out = std::cout);
        
        // $insert lexFunctionDecl
        int lex();

    private:
        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts
};

// $insert scannerConstructors
inline KismetScanner::KismetScanner(std::istream &in, std::ostream &out)
:
    KismetScannerBase(in, out)
{
    if(Options::Instance()->get(REACTIVE))
        begin(StartCondition__::WAITING);
}


inline void KismetScanner::preCode() 
{
    // optionally replace by your own code
}

inline void KismetScanner::print() 
{
    print__();
}

// $insert namespace-close
}

#endif // KismetScanner_H_INCLUDED_

